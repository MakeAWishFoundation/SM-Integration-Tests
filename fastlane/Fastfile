fastlane_version "2.51.0"

default_platform :ios

platform :ios do

    # CocoaPods

    desc "Cocoapods integration with unit tests"
    lane :test_pods_unit do
        sh "cd ./../CocoaPods/Unit && pod update"
        scan(
            scheme: "UnitTests",
            workspace: "./CocoaPods/Unit/Unit.xcworkspace",
        )
    end

    desc "Cocoapods integration with unit tests as Static library"
    lane :test_pods_unit_static do
        sh "cd ./../CocoaPods/UnitAsStaticLibrary && pod update"
        scan(
            scheme: "UnitTests",
            workspace: "./CocoaPods/Unit/Unit.xcworkspace",
        )
    end

    desc "Cocoapods integration as main app prototyping library"
    lane :test_pods_prototyping do
        sh "cd ./../CocoaPods/Prototyping && pod update"
        scan(
            scheme: "PrototypingUITests",
            workspace: "./CocoaPods/Prototyping/Prototyping.xcworkspace",
        )
    end

    # Carthage

    desc "Carthage integration with unit tests"
    lane :test_carthage_unit do
        sh "cd ./../Carthage/Unit && carthage update --platform iOS --use-xcframeworks"
        sh "cd ./../Carthage/Unit && swiftymocky generate"
        scan(
            scheme: "UnitTests",
            project: "./Carthage/Unit/Unit.xcodeproj",
        )
    end

    desc "Carthage integration as main app prototyping library"
    lane :test_carthage_prototyping do
        sh "cd ./../Carthage/Prototyping && carthage update --platform iOS --use-xcframeworks"
        sh "cd ./../Carthage/Prototyping && swiftymocky generate"
        scan(
            scheme: "PrototypingUITests",
            project: "./Carthage/Prototyping/Prototyping.xcodeproj",
        )
    end

end

platform :tvos do
    desc "Carthage integration with unit tests"
    lane :test_carthage_unit do
        sh "cd ./../Carthage/Unit && carthage update --platform tvOS --use-xcframeworks"
        sh "cd ./../Carthage/Unit && swiftymocky generate"
        scan(
            scheme: "UnitTests-tvOS",
            project: "./Carthage/Unit/Unit.xcodeproj",
        )
    end
end

platform :spm do

    lane :test do
        sh "cd ../SwiftPM && mint run swiftymocky generate"
        sh "cd ../SwiftPM && swift test"
    end

    lane :test_xcode_unit do
        sh "cd ./../SwiftPM+Xcode/Unit && swiftymocky generate"
        scan(
            scheme: "UnitTests",
            project: "./SwiftPM+Xcode/Unit/Unit.xcodeproj",
        )
    end

    lane :test_xcode_prototyping do
        sh "cd ./../SwiftPM+Xcode/Prototyping && swiftymocky generate"
        scan(
            scheme: "PrototypingUITests",
            project: "./SwiftPM+Xcode/Prototyping/Prototyping.xcodeproj",
        )
    end
end
